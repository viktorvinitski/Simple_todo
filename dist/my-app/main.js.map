{"version":3,"sources":["./src/app/todos/todos.component.ts","./src/app/todos/todos.component.html","./src/environments/environment.ts","./src/app/shared/todo.model.ts","./src/app/todo-item/todo-item.component.ts","./src/app/todo-item/todo-item.component.html","./src/app/edit-todo-dialog/edit-todo-dialog.component.ts","./src/app/edit-todo-dialog/edit-todo-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/data.service.ts","./src/app/app.module.ts","./src/app/shared/tool-tip.directive.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Todo} from '../shared/todo.model';\nimport {DataService} from '../shared/data.service';\nimport {NgForm} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {EditTodoDialogComponent} from '../edit-todo-dialog/edit-todo-dialog.component';\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss']\n})\nexport class TodosComponent implements OnInit {\n\n  todos: Todo[];\n  showValidationErrors: boolean = false;\n\n  constructor(\n    private dataService: DataService,\n    private  dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n    this.todos = this.dataService.getAllTodos();\n  }\n\n  onFormSubmit(form: NgForm): any {\n    if (form.invalid) {\n      return this.showValidationErrors = true;\n    }\n    this.dataService.addTodo(new Todo(form.value.text));\n    this.showValidationErrors = false;\n    form.reset();\n  }\n\n  toggleCompleted(todo: Todo){\n    todo.completed = !todo.completed\n  }\n\n  editTodo(todo: Todo){\n    const index = this.todos.indexOf(todo)\n    const dialogRef = this.dialog.open(EditTodoDialogComponent, {\n      width: '700px',\n      data: todo\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if(result){\n        this.dataService.updateTodo(index, result)\n      }\n    })\n  }\n\n  deleteTodo(todo: Todo){\n    const index = this.todos.indexOf(todo)\n    this.dataService.deleteTodo(index)\n  }\n}\n","<section class=\"heading-section\">\r\n  <h1 class=\"title is-1 has-text-centered\">Todos</h1>\r\n</section>\r\n\r\n<div class=\"container add-todo-box-container\">\r\n  <div class=\"add-todo-box\">\r\n    <form #form=\"ngForm\" (ngSubmit)=\"onFormSubmit(form)\">\r\n      <h2 class=\"title is-5\">New todo</h2>\r\n\r\n      <div class=\"field is-grouped\" style=\"margin: 0\">\r\n        <p class=\"control is-expanded\">\r\n          <input ngModel #todoTextField=\"ngModel\" required minlength=\"2\" name=\"text\" class=\"input\" type=\"text\" placeholder=\"Type todo text here...\">\r\n        </p>\r\n        <p class=\"control\">\r\n          <button class=\"button alt-gradient-button\">\r\n              <i class=\"material-icons\">add</i>\r\n            Add\r\n          </button>\r\n        </p>\r\n      </div>\r\n\r\n      <div *ngIf=\"todoTextField.invalid && showValidationErrors\">\r\n        <p class=\"help is-danger\" *ngIf=\"todoTextField.errors?.required\">Please enter the text of your todo</p>\r\n        <p class=\"help is-danger\" *ngIf=\"todoTextField.errors?.minlength\">Todo text must be at least 2 characters</p>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n\r\n<section class=\"section\">\r\n  <div class=\"container\">\r\n    <div class=\"todos-list\">\r\n\r\n      <app-todo-item\r\n        *ngFor=\"let todo of todos\"\r\n        [todo]=\"todo\"\r\n        (todoClicked)=\"toggleCompleted(todo)\"\r\n        (editClicked)=\"editTodo(todo)\"\r\n        (deleteClicked)=\"deleteTodo(todo)\"\r\n      ></app-todo-item>\r\n\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class Todo {\r\n  constructor(\r\n    public text: string,\r\n    public completed: boolean = false\r\n  ) {}\r\n}\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Todo} from '../shared/todo.model';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss']\n})\nexport class TodoItemComponent implements OnInit {\n\n  @Input() todo: Todo\n  @Output() todoClicked: EventEmitter<void> = new EventEmitter()\n  @Output() editClicked: EventEmitter<void> = new EventEmitter()\n  @Output() deleteClicked: EventEmitter<void> = new EventEmitter()\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onTodoClicked(){\n    this.todoClicked.emit()\n  }\n\n  onEditClicked(){\n    this.editClicked.emit()\n  }\n\n  onDeleteClicked(){\n    this.deleteClicked.emit()\n  }\n\n}\n","<div class=\"todo-item\" (click)=\"onTodoClicked()\" [class.completed]=\"todo.completed\">\n  <div class=\"check-box\">\n    <i class=\"material-icons\">check</i>\n  </div>\n\n  <div class=\"todo-text\">\n    {{ todo.text }}\n  </div>\n\n  <div class=\"todo-controls-box\" (click)=\"$event.stopPropagation()\" >\n    <div class=\"todo-control-button\" appToolTip=\"Edit todo\"  (click)=\"onEditClicked()\">\n      <i class=\"material-icons\">edit</i>\n    </div>\n    <div class=\"todo-control-button is-danger\" appToolTip=\"Delete todo\"  (click)=\"onDeleteClicked()\">\n      <i class=\"material-icons\">delete</i>\n    </div>\n  </div>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Todo} from '../shared/todo.model';\n\n@Component({\n  selector: 'app-edit-todo-dialog',\n  templateUrl: './edit-todo-dialog.component.html',\n  styleUrls: ['./edit-todo-dialog.component.scss']\n})\nexport class EditTodoDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<EditTodoDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public todo: Todo) { }\n\n  ngOnInit(): void {\n  }\n\n  close(){\n    this.dialogRef.close()\n  }\n\n  onFormSubmit(form: NgForm){\n    if(form.invalid) return\n    const updatedTodo = {...this.todo, ...form.value}\n    this.dialogRef.close(updatedTodo)\n  }\n\n}\n","<h1 class=\"title\">Edit Todo</h1>\n<div mat-dialog-content>\n  <form #form=\"ngForm\" (ngSubmit)=\"onFormSubmit(form)\">\n    <div class=\"field\">\n      <div class=\"control\">\n        <input\n          type=\"text\"\n          class=\"input\"\n          [ngModel]=\"todo.text\"\n          #todoTextField=\"ngModel\"\n          name=\"text\"\n          required\n          minlength=\"2\"\n          placeholder=\"Type todo text here...\">\n      </div>\n      <div *ngIf=\"todoTextField.invalid\">\n        <p class=\"help is-danger\" *ngIf=\"todoTextField.errors?.required\">Please enter the text of your todo</p>\n        <p class=\"help is-danger\" *ngIf=\"todoTextField.errors?.minlength\">Todo text must be at least 2 characters</p>\n      </div>\n\n      <br>\n\n      <div class=\"field is-grouped is-grouped-right\">\n        <div class=\"control\">\n          <button type=\"button\" class=\"button is-light\" (click)=\"close()\">Cancel</button>\n        </div>\n        <div class=\"control\">\n          <button type=\"submit\" class=\"button alt-gradient-button\">\n            <i class=\"material-icons\">save</i>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n\n  ngOnInit(): void{\n\n  }\n\n\n}\n","<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\nimport {Todo} from './todo.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  todos: Todo[] = [\n    new Todo('Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti dolore ipsum optio ut velit. Doloremque est eveniet fugiat modi nemo nihil pariatur quas quod quos ratione, sint soluta vero voluptatibus!', false),\n    new Todo('Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti dolore ipsum optio ut velit. Doloremque est eveniet fugiat modi nemo nihil pariatur quas quod quos ratione, sint soluta vero voluptatibus!', false)\n  ]\n\n  constructor() { }\n\n  getAllTodos(){\n    return this.todos\n  }\n\n  addTodo(todo: Todo){\n    this.todos.push(todo)\n  }\n\n  updateTodo(index: number, updateTodo: Todo){\n    this.todos[index] = updateTodo\n  }\n\n  deleteTodo(index: number){\n    this.todos.splice(index, 1)\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {FormsModule} from '@angular/forms';\nimport { TodosComponent } from './todos/todos.component';\nimport { TodoItemComponent } from './todo-item/todo-item.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EditTodoDialogComponent } from './edit-todo-dialog/edit-todo-dialog.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { ToolTipDirective } from './shared/tool-tip.directive';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodosComponent,\n    TodoItemComponent,\n    EditTodoDialogComponent,\n    ToolTipDirective,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {AfterViewInit, Directive, ElementRef, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport tippy from 'tippy.js';\n\n@Directive({\n  selector: '[appToolTip]'\n})\nexport class ToolTipDirective implements AfterViewInit{\n\n  @Input('appToolTip') toolTipContent: string\n\n  constructor(private elRef: ElementRef) { }\n\n  ngAfterViewInit() {\n    tippy(this.elRef.nativeElement, {\n      content: this.toolTipContent\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {TodosComponent} from './todos/todos.component';\n\nconst routes: Routes = [\n  { path: '', component: TodosComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}